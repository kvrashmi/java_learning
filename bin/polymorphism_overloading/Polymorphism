1.Polymorphism allows us to perform a single action in different ways.
2.In other words, polymorphism allows you to define one interface and have multiple implementations. 
3.In Java polymorphism is mainly divided into two types: 
	a.Compile-time Polymorphism
    b.Runtime Polymorphism
4.Compile-time Polymorphism:
============================
	It is also known as static polymorphism. This type of polymorphism is achieved by function/method overloading.
	Method Overloading: 
	===================
	When there are multiple functions with the same name but different parameters then these functions are said to 
	be overloaded. 
	Functions can be overloaded by change in the number of arguments or/and a change in the type of arguments
	or change in the order of parameters.

5.Run-time Polymorphism/Dynamic Method Dispatch:
================================================
It is a process in which a function call to the overridden method is resolved at Runtime. 
This type of polymorphism is achieved by Method Overriding. 
Method overriding, on the other hand, occurs when a derived class has a definition for one of the member functions of the base class. That base function is said to be overridden.